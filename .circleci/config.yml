version: 2.1

commands:
  early_return_for_forked_pull_requests:
    description: >-
      If this build is from a fork, stop executing the current job and return success.
      This is useful to avoid steps that will fail due to missing credentials.
    steps:
      - run:
          name: Early return if this build is from a forked PR
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo "Nothing to do for forked PRs, so marking this step successful"
              circleci step halt
            fi
jobs:
  checkout_code:
    docker:
      - image: circleci/openjdk:8u181-jdk
    working_directory: ~/build
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/build

  bundle_dependencies:
    docker:
      - image: circleci/openjdk:8u181-jdk-node
    working_directory: ~/build
    environment:
      MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - restore_cache:
          keys:
            - v1-node-dependencies-{{ checksum "package.json" }}
            - v1-node-dependencies-
      - run: mvn dependency:go-offline
      - run: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - save_cache:
          key: v1-node-dependencies-{{ checksum "package.json" }}
          paths:
            - ~/node_modules

  verify_documentation:
    docker:
      - image: circleci/openjdk:8u181-jdk-node
    working_directory: ~/build
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-node-dependencies-{{ checksum "package.json" }}
            - v1-node-dependencies-
      - run: ./.circleci/scripts/verify-docs.sh

  verify_license_headers:
    docker:
      - image: circleci/clojure:lein-2.8.3
    working_directory: ~/build
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - run: ./.circleci/scripts/verify-license-headers.sh "clj" "^;; Copyright 2018-[0-9]{4} Workiva Inc.$" project.clj profiles.clj
      - run: ./.circleci/scripts/verify-license-headers.sh "java" "^// Copyright 2018-[0-9]{4} Workiva Inc.$"

  format_code:
    docker:
      - image: circleci/openjdk:8u181-jdk
    working_directory: ~/build
    environment:
      MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn -B fmt:check

  lint_code:
    docker:
      - image: circleci/openjdk:8u181-jdk
    working_directory: ~/build
    environment:
      MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn -B checkstyle:check

  unit_tests:
    docker:
      # TODO - some sort of problem with circleci's openjdk image, can't find clojure.lang.Compile class
      # - image: circleci/openjdk:8u181-jdk
      - image: maven:3.6-jdk-8-alpine
    working_directory: /home/circleci/build
    environment:
      MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: cp -R /home/circleci/.m2 ~/
      - run: mvn -B -Dcheckstyle.skip test

  build_jar:
    docker:
      - image: maven:3.6-jdk-8-alpine
    working_directory: /home/circleci/build
    environment:
      MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: cp -R /home/circleci/.m2 ~/
      - run: mvn -B -DskipTests -Dcheckstyle.skip clean package
      - run: mkdir -p ./artifacts/jars
      - run: mv ./target/*.jar ./artifacts/jars/
      - store_artifacts:
          path: ./artifacts

  # Verify that internal CI system will not fail after a merged PR
  verify_workiva_ci:
    docker:
      - image: circleci/openjdk:8u181-jdk
    working_directory: ~/build
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - setup_remote_docker:
          docker_layer_caching: false
      - run: ./.circleci/scripts/verify-dockerfile.sh

  push_to_clojars:
    docker:
      - image: maven:3.6-jdk-8-alpine
    working_directory: /home/circleci/build
    environment:
      MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - v1-repo-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: cp -R /home/circleci/.m2 ~/
      - run: cp ./.circleci/clojars/settings.xml ~/.m2/settings.xml
      # - run: mvn deploy

workflows:
  eva_client_java_workflow:
    jobs:
      - checkout_code:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /[0-9a-f]{7}_cr_no_smithy/
      - bundle_dependencies:
          requires:
            - checkout_code
          filters:
            tags:
              only: /.*/
      - verify_documentation:
          requires:
            - checkout_code
          filters:
            tags:
              only: /.*/
      - verify_license_headers:
          requires:
            - checkout_code
          filters:
            tags:
              only: /.*/
      - format_code:
          requires:
            - checkout_code
            - bundle_dependencies
          filters:
            tags:
              only: /.*/
      - lint_code:
          requires:
            - checkout_code
            - bundle_dependencies
          filters:
            tags:
              only: /.*/
      - unit_tests:
          requires:
            - checkout_code
            - bundle_dependencies
          filters:
            tags:
              only: /.*/
      - build_jar:
          requires:
            - bundle_dependencies
            - format_code
            - lint_code
            - unit_tests
          filters:
            tags:
              only: /.*/
      - verify_workiva_ci:
          requires:
            - checkout_code
          filters:
            tags:
              only: /.*/
      - push_to_clojars:
          context: Clojars
          requires:
            - verify_workiva_ci
            - build_jar
          # Only run on tagged builds starting with 'v'
          # Therefore, releases MUST start with 'v'
          # filters:
          #   tags:
          #     only: /^v.*/
          #   branches:
          #     ignore: /.*/
          filters:
            tags:
              only: /.*/
